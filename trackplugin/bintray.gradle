
// 根节点添加
//apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// 根节点添加
def siteUrl = 'https://gitee.com/forestye/statics-sdk'    // project homepage
def gitUrl = 'https://gitee.com/forestye/statics-sdk.git' // project git

// 根节点添加
version = "1.0.0"
//发布到组织名称名字，必须填写
group = "com.mampod.track"
//发布到JCenter上的项目名字，必须填写
def libName = "autotrack-gradle-plugin"

//生成源文件
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task groovydocJar(type: Jar, dependsOn: groovydoc){
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}
//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

tasks.withType(Javadoc) {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/7/docs/api"
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}


//上传到jcenter所需要的源码文件
artifacts {
    archives javadocJar
    archives groovydocJar
    archives sourcesJar
}

//// 上传本地maven库
//uploadArchives {
//    version = version + '-SNAPSHOT'
//    repositories {
//        mavenDeployer {
//            snapshotRepository(url: uri('../snapshotRepo'))
//            pom.groupId = group
//            pom.artifactId = libName
//            pom.version = version
//        }
//    }
//}



// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                name 'autotrack-gradle-plugin'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'idremo'
                        name 'idremo'
                        email 'lanshaoze@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
//上传到jcenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {//这里就是我们的包的初始信息！！
        userOrg = "idremo" //对应JCenter的你的组织或个人名字
        repo = "Track" //对应JCenter的你的库名
        name = libName    //对应JCenter上的项目（包）名字，必须填写
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}